from Logic.Data.LogicData import LogicData
from Logic.Data.Row import Row

class CharacterData(LogicData):
    def __init__(self, row, datatable):
        super().__init__(row, datatable)
        # Type-checking methods remain the sameâ€¦

    def load_data_from_row(self, row: Row):
        # Strings
        self.name = row.get_value(0)
        self.item_name = row.get_value(1)
        self.weapon_skill = row.get_value(2)
        self.ultimate_skill = row.get_value(3)
        self.pet = row.get_value(4)
        self.type = row.get_value(5)
        self.default_skin = row.get_value(6)
        self.file_name = row.get_value(7)
        self.blue_export_name = row.get_value(8)
        self.red_export_name = row.get_value(9)
        self.shadow_export_name = row.get_value(10)
        self.area_effect = row.get_value(11)
        self.death_area_effect = row.get_value(12)
        self.take_damage_effect = row.get_value(13)
        self.death_effect = row.get_value(14)
        self.move_effect = row.get_value(15)
        self.reload_effect = row.get_value(16)
        self.out_of_ammo_effect = row.get_value(17)
        self.dry_fire_effect = row.get_value(18)
        self.spawn_effect = row.get_value(19)
        self.melee_hit_effect = row.get_value(20)
        self.auto_attack_start_effect = row.get_value(21)
        self.bone_effect1 = row.get_value(22)
        self.bone_effect2 = row.get_value(23)
        self.bone_effect3 = row.get_value(24)
        self.bone_effect4 = row.get_value(25)
        self.bone_effect_use = row.get_value(26)
        self.looped_effect = row.get_value(27)
        self.looped_effect2 = row.get_value(28)
        self.kill_celebration_sound_vo = row.get_value(29)
        self.in_lead_celebration_sound_vo = row.get_value(30)
        self.start_sound_vo = row.get_value(31)
        self.use_ulti_sound_vo = row.get_value(32)
        self.take_damage_sound_vo = row.get_value(33)
        self.death_sound_vo = row.get_value(34)
        self.attack_sound_vo = row.get_value(35)
        self.health_bar = row.get_value(36)
        self.tid = row.get_value(37)
        self.icon_swf = row.get_value(38)
        self.icon_export_name = row.get_value(39)
        self.homeworld = row.get_value(40)
        self.footstep_clip = row.get_value(41)
        self.video_link = row.get_value(42)

        # Integers
        self.speed = row.get_int(50)
        self.hitpoints = row.get_int(51)
        self.auto_attack_speed_ms = row.get_int(52)
        self.auto_attack_damage = row.get_int(53)
        self.auto_attack_bullets_per_shot = row.get_int(54)
        self.auto_attack_projectile_spread = row.get_int(55)
        self.auto_attack_range = row.get_int(56)
        self.regenerate_per_second = row.get_int(57)
        self.ulti_charge_mul = row.get_int(58)
        self.ulti_charge_ulti_mul = row.get_int(59)
        self.damager_percent_from_aliens = row.get_int(60)
        self.attack_start_effect_offset = row.get_int(61)
        self.two_weapon_attack_effect_offset = row.get_int(62)
        self.shadow_scale_x = row.get_int(63)
        self.shadow_scale_y = row.get_int(64)
        self.shadow_x = row.get_int(65)
        self.shadow_y = row.get_int(66)
        self.shadow_skew = row.get_int(67)
        self.scale = row.get_int(68)
        self.hero_screen_scale = row.get_int(69)
        self.fit_to_box_scale = row.get_int(70)
        self.end_screen_scale = row.get_int(71)
        self.gatcha_screen_scale = row.get_int(72)
        self.home_screen_scale = row.get_int(73)
        self.hero_screen_x_offset = row.get_int(74)
        self.hero_screen_z_offset = row.get_int(75)
        self.collision_radius = row.get_int(76)
        self.flying_height = row.get_int(77)
        self.projectile_start_z = row.get_int(78)
        self.stop_movement_after_ms = row.get_int(79)
        self.wait_ms = row.get_int(80)
        self.recoil_amount = row.get_int(81)
        self.different_footstep_offset = row.get_int(82)
        self.footstep_interval_ms = row.get_int(83)
        self.attacking_weapon_scale = row.get_int(84)
        self.common_set_upgrade_bonus = row.get_int(85)
        self.rare_set_upgrade_bonus = row.get_int(86)
        self.super_rare_set_upgrade_bonus = row.get_int(87)
        self.red_add = row.get_int(88)
        self.green_add = row.get_int(89)
        self.blue_add = row.get_int(90)
        self.red_mul = row.get_int(91)
        self.green_mul = row.get_int(92)
        self.blue_mul = row.get_int(93)
        self.charge_ulti_automatically = row.get_int(94)
        self.extra_minions = row.get_int(95)
        self.pet_auto_spawn_delay = row.get_int(96)
        self.offense_rating = row.get_int(97)
        self.defense_rating = row.get_int(98)
        self.utility_rating = row.get_int(99)

        # Booleans
        self.locked_for_chronos = row.get_bool(120)
        self.disabled = row.get_bool(121)
        self.melee_auto_attack_splash_damage = row.get_bool(122)
        self.force_attack_animation_to_end = row.get_bool(123)
        self.use_throwing_left_weapon_bone_scaling = row.get_bool(124)
        self.use_throwing_right_weapon_bone_scaling = row.get_bool(125)
        self.can_walk_over_water = row.get_bool(126)
        self.use_color_mod = row.get_bool(127)
        self.should_encode_pet_status = row.get_bool(128)
        self.secondary_pet = row.get_bool(129)
